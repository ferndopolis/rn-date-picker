__d('rn-date-picker/examples/libs/format.js',function(global, require, module, exports) {  module.exports=function(date,fmt){
var o={
"M+":date.getMonth()+1,
"d+":date.getDate(),
"h+":date.getHours(),
"m+":date.getMinutes(),
"s+":date.getSeconds(),
"q+":Math.floor((date.getMonth()+3)/3),
"S":date.getMilliseconds()};

if(/(y+)/.test(fmt))
fmt=fmt.replace(RegExp.$1,(date.getFullYear()+"").substr(4-RegExp.$1.length));
for(var k in o){
if(new RegExp("("+k+")").test(fmt))
fmt=fmt.replace(RegExp.$1,RegExp.$1.length==1?o[k]:("00"+o[k]).substr((""+o[k]).length));}
return fmt;};
});
__d('rn-date-picker/examples/popup.js',function(global, require, module, exports) {  'use strict';

var _reactNative=require('react-native/Libraries/react-native/react-native.js');var _reactNative2=babelHelpers.interopRequireDefault(_reactNative);
var _rnDatePicker=require('rn-date-picker/index.android.js');var _rnDatePicker2=babelHelpers.interopRequireDefault(_rnDatePicker);
var _format=require('rn-date-picker/examples/libs/format.js');var _format2=babelHelpers.interopRequireDefault(_format);

var styles=_reactNative.StyleSheet.create({
label:{
color:'red',
textAlign:'center',
fontSize:20,
fontWeight:'900',
lineHeight:28},

button:{
alignItems:'center',
justifyContent:'center',
margin:5,
height:40,
borderRadius:3,
backgroundColor:'darkgray'},

buttonText:{
fontSize:13,
color:'#fff'}});



var PopupExample=_reactNative2.default.createClass({displayName:'PopupExample',
getInitialState:function(){
return {
visible:false,
date:new Date('2015-12-12'),
minDate:new Date('2014-12-12'),
maxDate:new Date('2019-12-12'),
mode:'datetime'};},


getFormatDate:function(fmt){
if(this.state.date){
return (0,_format2.default)(this.state.date,fmt);}

return " ";},

onDismiss:function(){
this.setState({visible:false});},

onChange:function(date){
this.setState({
visible:false,
date:date});},


render:function(){var _this=this;
return (
_reactNative2.default.createElement(_reactNative.View,{style:{flex:1,backgroundColor:'#F5F5F9'}},
_reactNative2.default.createElement(_reactNative.TouchableHighlight,{delayPressOut:1,style:styles.button,
underlayColor:'gray',
onPress:function(){return _this.setState({visible:true});}},
_reactNative2.default.createElement(_reactNative.Text,{style:styles.buttonText},this.getFormatDate("yyyy-MM-dd hh:mm"))),

_reactNative2.default.createElement(_rnDatePicker2.default,{
visible:this.state.visible,
date:this.state.date,
onDismiss:this.onDismiss,
onChange:this.onChange,
minDate:this.state.minDate,
maxDate:this.state.maxDate,
mode:this.state.mode})));}});





_reactNative.AppRegistry.registerComponent('popup',function(){return PopupExample;});
});
__d('rn-date-picker/index.android.js',function(global, require, module, exports) {  var _popup=require('rn-date-picker/src/android/popup.js');var _popup2=babelHelpers.interopRequireDefault(_popup);

module.exports=_popup2.default;
});
__d('rn-date-picker/src/android/popup.js',function(global, require, module, exports) {  'use strict';Object.defineProperty(exports,"__esModule",{value:true});

var _reactNative=require('react-native/Libraries/react-native/react-native.js');var _reactNative2=babelHelpers.interopRequireDefault(_reactNative);

var noop=function(){};exports.default=

_reactNative2.default.createClass({displayName:'popup',
propTypes:{
minDate:_reactNative.PropTypes.object,
maxDate:_reactNative.PropTypes.object,
onChange:_reactNative.PropTypes.func,
onDismiss:_reactNative.PropTypes.func,
visible:_reactNative.PropTypes.bool,
mode:_reactNative.PropTypes.string},

getDefaultProps:function(){
return {
date:new Date(),
onChange:noop,
onDismiss:noop,
visible:false,
mode:'date'};},


onChange:function(date){
var ret=this.props.date||new Date();
if(!date.year){
ret.setHours(date.hour);
ret.setMinutes(date.minute);
ret.setSeconds(0);}else 
if(!date.hour){
ret=new Date(date.year,date.month,date.day);}else 
{
ret=new Date(date.year,date.month,date.day,date.hour,date.minute);}

this.props.onChange(ret);},

onDateChange:function(date){
if(this.props.mode==='datetime'){
this.showTimePicker({
hour:this.props.hour,
minute:this.props.minute},
date);}else 
{
this.onChange(date);}},


onTimeChange:function(date){
this.onChange(date);},

onDismiss:function(){
this.props.onDismiss();},

componentWillReceiveProps:function(props){
if(typeof props.visible=="undefined")return;

if(props.visible){
switch(this.props.mode){
case 'time':
this.showTimePicker({
hour:this.props.hour,
minute:this.props.minute});

break;
default:
this.showDatePicker({
date:this.props.date,
minDate:this.props.minDate,
maxDate:this.props.maxDate});}}},




showDatePicker:function _callee(options){var _ref,

action,year,month,day,





_code,_message;return regeneratorRuntime.async(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return regeneratorRuntime.awrap(_reactNative.DatePickerAndroid.open(options));case 3:_ref=_context.sent;action=_ref.action;year=_ref.year;month=_ref.month;day=_ref.day;if(action===_reactNative.DatePickerAndroid.dismissedAction){this.onDismiss();}else {this.onDateChange({year:year,month:month,day:day});}_context.next=16;break;case 11:_context.prev=11;_context.t0=_context['catch'](0);_code=_context.t0.code;_message=_context.t0.message;
console.warn('Error: ',_message);case 16:case 'end':return _context.stop();}}},null,this,[[0,11]]);},


showTimePicker:function _callee2(options,date){var _ref3,

action,minute,hour,








_code2,_message2;return regeneratorRuntime.async(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return regeneratorRuntime.awrap(_reactNative.TimePickerAndroid.open(options));case 3:_ref3=_context2.sent;action=_ref3.action;minute=_ref3.minute;hour=_ref3.hour;if(action===_reactNative.TimePickerAndroid.timeSetAction){date=date||{};date.hour=hour;date.minute=minute;this.onTimeChange(date);}else if(action===_reactNative.TimePickerAndroid.dismissedAction){this.onDismiss();}_context2.next=15;break;case 10:_context2.prev=10;_context2.t0=_context2['catch'](0);_code2=_context2.t0.code;_message2=_context2.t0.message;
console.warn('Error :',_message2);case 15:case 'end':return _context2.stop();}}},null,this,[[0,10]]);},


render:function(){
return null;}});
});
;require("rn-date-picker/examples/popup.js");
__SSTOKENSTRING = "@generated SignedSource<<f231ec68f16bb6662b0af54b08f269f4>>";
